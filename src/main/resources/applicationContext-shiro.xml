<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd"
	default-lazy-init="true">

    <description>Shiro安全配置</description>

	<!-- Shiro's main business-tier object for web-enabled applications -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="shiroRealm" />
		<property name="cacheManager" ref="shiroEhcacheManager" />
		<property name="sessionManager">
			<bean class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
				<property name="sessionIdCookie">
					<bean class="org.apache.shiro.web.servlet.SimpleCookie">
						<constructor-arg>
							<value>AdminSessionId</value>
						</constructor-arg>
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<!-- 項目自定义的Realm, 继承自AuthorizingRealm -->
	<bean id="shiroRealm" class="com.founder.sso.admin.service.account.AdminDbRealm"></bean>

	<!-- 退出的地址 -->
	<bean id="logoutAdmin" class="org.apache.shiro.web.filter.authc.LogoutFilter">
		<property name="redirectUrl" value="/admin/login" />
	</bean>

	<!-- Shiro Filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/admin/login" />
		<property name="successUrl" value="/admin" />
		<property name="unauthorizedUrl" value="/admin/login"></property>
		<property name="filters">
			<map>
				<entry key="logout" value-ref="logoutAdmin" />
			</map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				/admin/login = authc
				/admin/logout = logout
				/admin/** = user
			</value>
		</property>
	</bean>
	<!-- 用户授权信息Cache, 采用EhCache -->
	<bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:ehcache/ehcache-shiro.xml" />
	</bean>

	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />


	<!--************************ 下面是外网用户的shiro配置 ************************ -->

	<!-- Shiro's main business-tier object for web-enabled applications -->
	<bean id="securityManagerOfUser" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- 两个Realm，一个是基于username+password，另一个是基于oAuth的 -->
		<property name="realms">
			<list>
				<ref bean="shiroRealmOfUser" />
				<ref bean="oauth2Realm" />
			</list>
		</property>

		<property name="cacheManager" ref="shiroEhcacheManagerForUser" />
		<property name="rememberMeManager" ref="rememberMeManager"/>
	</bean>

	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<property name="cookie" ref="rememberMeCookie" />
	</bean>
	<!-- 记住我cookie -->
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="rememberMe" />
		<property name="maxAge" value="604800" />
	</bean>

	<!-- 項目自定义的Realm, 继承自AuthorizingRealm -->
	<bean id="shiroRealmOfUser" class="com.founder.sso.service.UserShiroRealm"></bean>
	<bean id="oauth2Realm" class="com.founder.sso.service.oauth.OauthRealm"></bean>

	<bean id="oauth2AuthcFilter" class="com.founder.sso.service.oauth.filter.OauthAuthenticationFilter"></bean>
	<bean id="oauth2UserFilter" class="com.founder.sso.service.oauth.filter.OauthUserFilter"></bean>
	<bean id="permitLoginFilter" class="com.founder.sso.service.oauth.filter.PermitLoginFilter"></bean>

	<bean id="thirdAuthcFilter" class="com.founder.sso.service.oauth.filter.ThirdAuthenticationFilter"></bean>
	<!-- Shiro Filter -->
	<bean id="shiroFilterOfUser" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManagerOfUser" />
		<property name="loginUrl" value="/user/login" />
		<property name="successUrl" value="/user/connection/isConnected" />
		<property name="unauthorizedUrl" value="/user/login"></property>
		<property name="filters">
			<map>
				<entry key="oauth2Authc" value-ref="oauth2AuthcFilter" />
				<entry key="oauth2User" value-ref="oauth2UserFilter" />
				<entry key="permitLogin" value-ref="permitLoginFilter" />
				<entry key="thirdAuthc" value-ref="thirdAuthcFilter" />
			</map>
		</property>
		<property name="filterChainDefinitions">
			<value>
                /user/register = permitLogin
                /user/register_app = permitLogin
                /user/email/test = anon
                /user/email/sendCode = anon
                /user/deleteUser = anon
                /user/privacy/statement = permitLogin
                /user/email/updateEmailConfig = anon
                /user/password/find = permitLogin
                /user/password/find/inputCode = permitLogin
                /user/password/find/authentication = permitLogin
                /user/password/find/resetPwd = permitLogin
                /user/password/find/resetPassword = permitLogin
				/user/resetPwd/postHandle = permitLogin
                /user/forgetPwd_app = permitLogin
                /user/forgetPwd_web = permitLogin
                /user/sendCode = anon
                /user/checkCode = anon
                /user/ssoLogin = anon
                /user/ssoLogin_app = anon
                /user/ssoLogout = anon
                /user/changyan/** = anon
                /user/identities/isLegal = anon
				/user/login = permitLogin
				/user/login_app = permitLogin
				/user/logout = logout
				/user/email/send = anon
				/user/oauth2/session/new = thirdAuthc
				/user/connection/undefined = thirdAuthc
				/user/undefined = thirdAuthc
				/user/isLogOut = permitLogin
				/user/checkUserExit = permitLogin
				/auth/twitter/callback = permitLogin
				/user/connection/onece = permitLogin
				/auth/wxJsHandler = permitLogin
				/user/** = oauth2User
			</value>
		</property>
	</bean>
	<!--/** = user-->
    <bean id="shiroEhcacheManagerForUser" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache/ehcache-shiro-user.xml"/>
    </bean>
</beans>